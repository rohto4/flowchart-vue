{"remainingRequest":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\src\\components\\NodeDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\src\\components\\NodeDialog.vue","mtime":1587796142773},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport \"../assets/modal.css\";\nexport default {\n  props: {\n    visible: {\n      type: Boolean,\n      default: false\n    },\n    node: {\n      type: Object,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      nodeForm: {\n        name: null,\n        id: null,\n        type: null,\n        approver: []\n      },\n      approvers: [{\n        id: 1,\n        name: 'Joyce'\n      }, {\n        id: 2,\n        name: 'Allen'\n      }, {\n        id: 3,\n        name: 'Teresa'\n      }]\n    };\n  },\n  methods: {\n    handleClickSaveNode: function handleClickSaveNode() {\n      this.$emit('update:node', Object.assign(this.node, {\n        name: this.nodeForm.name,\n        type: this.nodeForm.type,\n        approvers: [Object.assign({}, this.nodeForm.approver)]\n      }));\n      this.$emit('update:visible', false);\n    },\n    handleClickCancelSaveNode: function handleClickCancelSaveNode() {\n      this.$emit('update:visible', false);\n    },\n    handleChangeApprover: function handleChangeApprover(e) {\n      this.nodeForm.approver = this.approvers.filter(function (i) {\n        return i.id === parseInt(e.target.value);\n      })[0];\n    }\n  },\n  watch: {\n    node: {\n      immediate: true,\n      handler: function handler(val) {\n        if (!val) {\n          return;\n        }\n\n        this.nodeForm.id = val.id;\n        this.nodeForm.name = val.name;\n        this.nodeForm.type = val.type;\n\n        if (val.approvers && val.approvers.length > 0) {\n          this.nodeForm.approver = val.approvers[0];\n        }\n      }\n    }\n  }\n};",{"version":3,"sources":["NodeDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,OAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AALA,GADA;AAWA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,EAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,QAAA,EAAA;AAAA,OADA;AAEA,MAAA,SAAA,EAAA,CAAA;AAAA,QAAA,EAAA,EAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA,EAAA;AAAA,QAAA,EAAA,EAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA,EAAA;AAAA,QAAA,EAAA,EAAA,CAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AAFA,KAAA;AAIA,GAhBA;AAiBA,EAAA,OAAA,EAAA;AACA,IAAA,mBADA,iCACA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,MAAA,CAAA,MAAA,CAAA,KAAA,IAAA,EAAA;AACA,QAAA,IAAA,EAAA,KAAA,QAAA,CAAA,IADA;AAEA,QAAA,IAAA,EAAA,KAAA,QAAA,CAAA,IAFA;AAGA,QAAA,SAAA,EAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAA,QAAA,CAAA,QAAA,CAAA;AAHA,OAAA,CAAA;AAKA,WAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;AACA,KARA;AASA,IAAA,yBATA,uCASA;AACA,WAAA,KAAA,CAAA,gBAAA,EAAA,KAAA;AACA,KAXA;AAYA,IAAA,oBAZA,gCAYA,CAZA,EAYA;AACA,WAAA,QAAA,CAAA,QAAA,GAAA,KAAA,SAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,KAAA,QAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KAAA,CAAA;AAAA,OAAA,EAAA,CAAA,CAAA;AACA;AAdA,GAjBA;AAiCA,EAAA,KAAA,EAAA;AACA,IAAA,IAAA,EAAA;AACA,MAAA,SAAA,EAAA,IADA;AAEA,MAAA,OAFA,mBAEA,GAFA,EAEA;AACA,YAAA,CAAA,GAAA,EAAA;AAAA;AAAA;;AACA,aAAA,QAAA,CAAA,EAAA,GAAA,GAAA,CAAA,EAAA;AACA,aAAA,QAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA;AACA,aAAA,QAAA,CAAA,IAAA,GAAA,GAAA,CAAA,IAAA;;AACA,YAAA,GAAA,CAAA,SAAA,IAAA,GAAA,CAAA,SAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,eAAA,QAAA,CAAA,QAAA,GAAA,GAAA,CAAA,SAAA,CAAA,CAAA,CAAA;AACA;AACA;AAVA;AADA;AAjCA,CAAA","sourcesContent":["<template>\n    <div>\n        <div class=\"modal\" v-if=\"visible\" style=\"width: 320px\">\n            <div class=\"header\">\n                <span>Edit</span>\n            </div>\n            <div class=\"body\">\n                <label for=\"name\">Name</label>\n                <input class=\"form-control\" id=\"name\" v-model=\"nodeForm.name\"/>\n                <label for=\"type\">Type</label>\n                <select class=\"form-control\" id=\"type\" v-model=\"nodeForm.type\">\n                    <option :key=\"'node-type-' + item.id\" :value=\"item.id\"\n                            v-for=\"item in [ { name: 'Start', id: 'start' }, { name: 'End', id: 'end' }, { name: 'Operation', id: 'operation' } ]\"\n                    >\n                        {{item.name}}\n                    </option>\n                </select>\n                <label for=\"approver\">Approver</label>\n                <select class=\"form-control\" id=\"approver\" :value=\"nodeForm.approver.id\"\n                        @change=\"handleChangeApprover($event)\">\n                    <option :value=\"item.id\" :key=\"'approver-' + item.id\" v-for=\"item in approvers\">\n                        {{item.name}}\n                    </option>\n                </select>\n            </div>\n            <div class=\"footer\">\n                <button @click=\"handleClickCancelSaveNode\">Cancel</button>\n                <button @click=\"handleClickSaveNode\">Ok</button>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\n  import '../assets/modal.css';\n\n  export default {\n    props: {\n      visible: {\n        type: Boolean,\n        default: false,\n      },\n      node: {\n        type: Object,\n        default: null,\n      },\n    },\n    data: function() {\n      return {\n        nodeForm: {name: null, id: null, type: null, approver: []},\n        approvers: [{id: 1, name: 'Joyce'}, {id: 2, name: 'Allen'}, {id: 3, name: 'Teresa'}],\n      };\n    },\n    methods: {\n      handleClickSaveNode() {\n        this.$emit('update:node', Object.assign(this.node, {\n          name: this.nodeForm.name,\n          type: this.nodeForm.type,\n          approvers: [Object.assign({}, this.nodeForm.approver)],\n        }));\n        this.$emit('update:visible', false);\n      },\n      handleClickCancelSaveNode() {\n        this.$emit('update:visible', false);\n      },\n      handleChangeApprover(e) {\n        this.nodeForm.approver = this.approvers.filter(i => i.id === parseInt(e.target.value))[0];\n      },\n    },\n    watch: {\n      node: {\n        immediate: true,\n        handler(val) {\n          if (!val) { return; }\n          this.nodeForm.id = val.id;\n          this.nodeForm.name = val.name;\n          this.nodeForm.type = val.type;\n          if (val.approvers && val.approvers.length > 0) {\n            this.nodeForm.approver = val.approvers[0];\n          }\n        },\n      },\n    },\n  };\n</script>"],"sourceRoot":"src/components"}]}