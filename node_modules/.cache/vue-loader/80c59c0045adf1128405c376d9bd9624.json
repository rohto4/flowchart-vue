{"remainingRequest":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\src\\views\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\src\\views\\App.vue","mtime":1587802340495},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\nimport ConnectionDialog from '../components/ConnectionDialog';\nimport NodeDialog from '../components/NodeDialog';\nimport Flowchart from '../components/flowchart/Flowchart';\n\nexport default {\n  components: {\n    ConnectionDialog, NodeDialog, Flowchart,\n  },\n  data: function() {\n    return {\n      nodes: [\n        {id: 1, x: 50, y: 220, name: 'Start', type: 'start'},\n        {id: 2, x: 630, y: 220, name: 'End', type: 'end'},\n        {\n          id: 3,\n          x: 340,\n          y: 130,\n          name: 'Operation',\n          type: 'operation',\n          approvers: [{id: 1, name: 'Joyce'}],\n        },\n        {\n          id: 4,\n          x: 240,\n          y: 220,\n          name: 'Operation',\n          type: 'operation',\n          approvers: [{id: 2, name: 'Allen'}],\n        },\n        {\n          id: 5,\n          x: 440,\n          y: 220,\n          name: 'Operation',\n          type: 'operation',\n          approvers: [{id: 3, name: 'Teresa'}],\n        },\n      ],\n      connections: [\n        {\n          source: {id: 1, position: 'right'},\n          destination: {id: 4, position: 'left'},\n          id: 1,\n          type: 'pass',\n        },\n        {\n          source: {id: 4, position: 'right'},\n          destination: {id: 5, position: 'left'},\n          id: 2,\n          type: 'pass',\n        },\n        {\n          source: {id: 5, position: 'right'},\n          destination: {id: 2, position: 'left'},\n          id: 3,\n          type: 'pass',\n        },\n        {\n          source: {id: 5, position: 'bottom'},\n          destination: {id: 4, position: 'bottom'},\n          id: 4,\n          type: 'reject',\n        },\n        {\n          source: {id: 1, position: 'top'},\n          destination: {id: 3, position: 'left'},\n          id: 5,\n          type: 'pass',\n        },\n        {\n          source: {id: 3, position: 'right'},\n          destination: {id: 2, position: 'top'},\n          id: 6,\n          type: 'pass',\n        },\n      ],\n      nodeForm: {target: null},\n      connectionForm: {target: null, operation: null},\n      nodeDialogVisible: false,\n      connectionDialogVisible: false,\n    };\n  },\n  async mounted() {\n  },\n  methods: {\n    async handleChartSave(nodes, connections) {\n      // axios.post(url, {nodes, connection}).then(resp => {\n      //   this.nodes = resp.nodes;\n      //   this.connections = resp.connections;\n      //   // Flowchart will refresh after this.nodes and this.connections changed\n      // });\n    },\n    handleEditNode(node) {\n      this.nodeForm.target = node;\n      this.nodeDialogVisible = true;\n    },\n    handleEditConnection(connection) {\n      this.connectionForm.target = connection;\n      this.connectionDialogVisible = true;\n    },\n  },\n};\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"App.vue","sourceRoot":"src/views","sourcesContent":["<template>\n    <div class=\"container\">\n        <h1 class=\"title\" variant=\"info\">Flowchart Vue</h1>\n        <h5 class=\"subtitle\" veriant=\"dark\">Flowchart & Flowchart designer component for Vue.js.</h5>\n        <div id=\"toolbar\">\n            <b-button @click=\"$refs.chart.add(10, 10)\" variant=\"outline-primary\">Add(Double-click canvas)</b-button>\n            <b-button @click=\"$refs.chart.remove()\" variant=\"outline-primary\">Delete(Del)</b-button>\n            <b-button @click=\"$refs.chart.editCurrent()\" variant=\"outline-primary\">Edit(Double-click node)</b-button>\n            <b-button @click=\"$refs.chart.save()\" variant=\"outline-primary\">Save</b-button>\n        </div>\n        <flowchart :nodes=\"nodes\" :connections=\"connections\" @editnode=\"handleEditNode\"\n                   :width=\"'100%'\" :height=\"500\" :readonly=\"false\"\n                   @editconnection=\"handleEditConnection\" @save=\"handleChartSave\" ref=\"chart\">\n        </flowchart>\n        <node-dialog :visible.sync=\"nodeDialogVisible\" :node.sync=\"nodeForm.target\"></node-dialog>\n        <connection-dialog :visible.sync=\"connectionDialogVisible\"\n                           :connection.sync=\"connectionForm.target\"\n                           :operation=\"connectionForm.operation\">\n        </connection-dialog>\n    </div>\n</template>\n<script>\n\n  import ConnectionDialog from '../components/ConnectionDialog';\n  import NodeDialog from '../components/NodeDialog';\n  import Flowchart from '../components/flowchart/Flowchart';\n\n  export default {\n    components: {\n      ConnectionDialog, NodeDialog, Flowchart,\n    },\n    data: function() {\n      return {\n        nodes: [\n          {id: 1, x: 50, y: 220, name: 'Start', type: 'start'},\n          {id: 2, x: 630, y: 220, name: 'End', type: 'end'},\n          {\n            id: 3,\n            x: 340,\n            y: 130,\n            name: 'Operation',\n            type: 'operation',\n            approvers: [{id: 1, name: 'Joyce'}],\n          },\n          {\n            id: 4,\n            x: 240,\n            y: 220,\n            name: 'Operation',\n            type: 'operation',\n            approvers: [{id: 2, name: 'Allen'}],\n          },\n          {\n            id: 5,\n            x: 440,\n            y: 220,\n            name: 'Operation',\n            type: 'operation',\n            approvers: [{id: 3, name: 'Teresa'}],\n          },\n        ],\n        connections: [\n          {\n            source: {id: 1, position: 'right'},\n            destination: {id: 4, position: 'left'},\n            id: 1,\n            type: 'pass',\n          },\n          {\n            source: {id: 4, position: 'right'},\n            destination: {id: 5, position: 'left'},\n            id: 2,\n            type: 'pass',\n          },\n          {\n            source: {id: 5, position: 'right'},\n            destination: {id: 2, position: 'left'},\n            id: 3,\n            type: 'pass',\n          },\n          {\n            source: {id: 5, position: 'bottom'},\n            destination: {id: 4, position: 'bottom'},\n            id: 4,\n            type: 'reject',\n          },\n          {\n            source: {id: 1, position: 'top'},\n            destination: {id: 3, position: 'left'},\n            id: 5,\n            type: 'pass',\n          },\n          {\n            source: {id: 3, position: 'right'},\n            destination: {id: 2, position: 'top'},\n            id: 6,\n            type: 'pass',\n          },\n        ],\n        nodeForm: {target: null},\n        connectionForm: {target: null, operation: null},\n        nodeDialogVisible: false,\n        connectionDialogVisible: false,\n      };\n    },\n    async mounted() {\n    },\n    methods: {\n      async handleChartSave(nodes, connections) {\n        // axios.post(url, {nodes, connection}).then(resp => {\n        //   this.nodes = resp.nodes;\n        //   this.connections = resp.connections;\n        //   // Flowchart will refresh after this.nodes and this.connections changed\n        // });\n      },\n      handleEditNode(node) {\n        this.nodeForm.target = node;\n        this.nodeDialogVisible = true;\n      },\n      handleEditConnection(connection) {\n        this.connectionForm.target = connection;\n        this.connectionDialogVisible = true;\n      },\n    },\n  };\n</script>\n<style scoped>\n    #toolbar {\n        margin-bottom: 10px;\n    }\n\n    .title {\n        margin-top: 10px;\n        margin-bottom: 0;\n    }\n\n    .subtitle {\n        margin-bottom: 10px;\n    }\n\n    #toolbar > button {\n        margin-right: 4px;\n    }\n\n    .container {\n        width: 800px;\n        margin: auto;\n    }\n</style>\n"]}]}