{"remainingRequest":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\src\\views\\App.vue?vue&type=template&id=e920d152&scoped=true&","dependencies":[{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\src\\views\\App.vue","mtime":1587802340495},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\work\\IDE\\Git\\20_work\\git_local\\flowchart-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"container\" },\n    [\n      _c(\"h1\", { staticClass: \"title\", attrs: { variant: \"info\" } }, [\n        _vm._v(\"Flowchart Vue\")\n      ]),\n      _c(\"h5\", { staticClass: \"subtitle\", attrs: { veriant: \"dark\" } }, [\n        _vm._v(\"Flowchart & Flowchart designer component for Vue.js.\")\n      ]),\n      _c(\n        \"div\",\n        { attrs: { id: \"toolbar\" } },\n        [\n          _c(\n            \"b-button\",\n            {\n              attrs: { variant: \"outline-primary\" },\n              on: {\n                click: function($event) {\n                  return _vm.$refs.chart.add(10, 10)\n                }\n              }\n            },\n            [_vm._v(\"Add(Double-click canvas)\")]\n          ),\n          _c(\n            \"b-button\",\n            {\n              attrs: { variant: \"outline-primary\" },\n              on: {\n                click: function($event) {\n                  return _vm.$refs.chart.remove()\n                }\n              }\n            },\n            [_vm._v(\"Delete(Del)\")]\n          ),\n          _c(\n            \"b-button\",\n            {\n              attrs: { variant: \"outline-primary\" },\n              on: {\n                click: function($event) {\n                  return _vm.$refs.chart.editCurrent()\n                }\n              }\n            },\n            [_vm._v(\"Edit(Double-click node)\")]\n          ),\n          _c(\n            \"b-button\",\n            {\n              attrs: { variant: \"outline-primary\" },\n              on: {\n                click: function($event) {\n                  return _vm.$refs.chart.save()\n                }\n              }\n            },\n            [_vm._v(\"Save\")]\n          )\n        ],\n        1\n      ),\n      _c(\"flowchart\", {\n        ref: \"chart\",\n        attrs: {\n          nodes: _vm.nodes,\n          connections: _vm.connections,\n          width: \"100%\",\n          height: 500,\n          readonly: false\n        },\n        on: {\n          editnode: _vm.handleEditNode,\n          editconnection: _vm.handleEditConnection,\n          save: _vm.handleChartSave\n        }\n      }),\n      _c(\"node-dialog\", {\n        attrs: { visible: _vm.nodeDialogVisible, node: _vm.nodeForm.target },\n        on: {\n          \"update:visible\": function($event) {\n            _vm.nodeDialogVisible = $event\n          },\n          \"update:node\": function($event) {\n            return _vm.$set(_vm.nodeForm, \"target\", $event)\n          }\n        }\n      }),\n      _c(\"connection-dialog\", {\n        attrs: {\n          visible: _vm.connectionDialogVisible,\n          connection: _vm.connectionForm.target,\n          operation: _vm.connectionForm.operation\n        },\n        on: {\n          \"update:visible\": function($event) {\n            _vm.connectionDialogVisible = $event\n          },\n          \"update:connection\": function($event) {\n            return _vm.$set(_vm.connectionForm, \"target\", $event)\n          }\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}